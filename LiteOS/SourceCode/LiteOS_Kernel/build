#! /usr/bin/env python

# This file is part of LiteOS v0.3. Author: Qing Cao qcao2@cs.uiuc.edu
# 1/17/2008

# Functionality:
# Build script for the kernel, as well as generating the correct debugging files
# to be used by the terminal to debug kernel wirelessly

import sys
import os
import string
import shutil
import glob
import fileinput

#Modify type of target to add support for other platforms, such as iris and telos

typeOfTarget = 0

def processArguments():
    global typeOfTarget
    """Read the user argument for the target type"""

    args = sys.argv[1:]

    if len(args) > 3:
        print "The number of parameters is incorrect."
        sys.exit(1)

    temp = args[0]
    
    if temp == 'micaz':
        typeOfTarget = 1
        return
        
    if temp == 'iris':
        typeOfTarget = 2
        return
                
    if temp == 'base':
    	typeOfTarget = 3
    	return

    if temp == 'all':
        cmdtemp = "./build micaz"
        fout = os.popen(cmdtemp)
        resultoutput = fout.read()
        print resultoutput
        cmdtemp = "./build iris"
        fout = os.popen(cmdtemp)
        resultoutput = fout.read()
        print resultoutput
        cmdtemp = "./build base"
        fout = os.popen(cmdtemp)
        resultoutput = fout.read()
        print resultoutput
        sys.exit(1)


    #if temp == 'iris':
    #to be added
    
    
    #if temp == 'telos':
    #to be added
    
    
    print "The specified target platform "+args[0]+ " is not found. Exit."
    sys.exit(1)


if __name__ == "__main__":
    processArguments()
    
    if os.path.isdir("bin") == False:
       os.mkdir("bin")
    os.chdir("./bin")
    if os.path.isdir("dep") == True:
       os.system("rm -r dep")

    #Add new types of targets here.
    cmdtemp = "rm *.*"
    fout = os.popen(cmdtemp)
    resultoutput = fout.read()
    if typeOfTarget == 1:
        shutil.copyfile("../avr.micaz.target", "./Makefile")

    if typeOfTarget == 2:
        shutil.copyfile("../avr.iris.target", "./Makefile")
    
    if typeOfTarget == 3:
    	shutil.copyfile("../avr.base.target", "./Makefile")
        

    print "Please wait... This will take a few seconds..."
        
    os.system("make clean")
    cmdtemp = "make"
    fout = os.popen(cmdtemp)
    resultoutput = fout.read()
    print resultoutput
    

    os.chdir("../")

    if os.path.isfile("./bin/LiteOS.hex") == False:
        print "Build incomplete. Exit."
        sys.exit(1)

    if os.path.isfile("./bin/LiteOS.elf") == False:
        print "Build incomplete. Exit."
        sys.exit(1)


    shutil.move("./bin/LiteOS.hex", "LiteOS.hex")
    shutil.move("./bin/LiteOS.elf", "LiteOS.elf")
    shutil.move("./bin/LiteOS.lss", "LiteOS.lss")
    
    #shutil.rmtree("./bin")
		
    #os.mkdir("bin")
    os.chdir("./bin")
    os.system("rm *.*")
    os.system("rm makefile")
    os.system("rm -r dep")
    
    if typeOfTarget == 1:
        if os.path.isdir("micaz") == False:
            os.mkdir("micaz")
        os.chdir("./micaz")
        shutil.move("../../LiteOS.hex", "./LiteOS.hex")
    	shutil.move("../../LiteOS.elf", "./LiteOS.elf")
    	shutil.move("../../LiteOS.lss", "./LiteOS.lss")
    	shutil.copy("../../extract.pl", "./extract.pl")

    if typeOfTarget == 2:
        if os.path.isdir("iris") == False:
            os.mkdir("iris")
       	os.chdir("./iris")
       	shutil.move("../../LiteOS.hex", "./LiteOS.hex")
    	shutil.move("../../LiteOS.elf", "./LiteOS.elf")
    	shutil.move("../../LiteOS.lss", "./LiteOS.lss")
    	shutil.copy("../../extract.pl", "./extract.pl")
    
    if typeOfTarget == 3:
    	if os.path.isdir("base") == False:
    	    os.mkdir("base")
    	os.chdir("./base")
        shutil.move("../../LiteOS.hex", "./Base.hex")
    	shutil.move("../../LiteOS.elf", "./Base.elf")
    	shutil.move("../../LiteOS.lss", "./Base.lss")
    	shutil.copy("../../extract.pl", "./extract.pl")
    
    
    print "The files have been generated in the bin directory"
   

    


    
    






    


