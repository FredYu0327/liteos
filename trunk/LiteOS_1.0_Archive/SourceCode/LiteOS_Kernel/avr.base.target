###############################################################################
# Makefile for the project LiteOS
###############################################################################

## General Flags
PROJECT = LiteOS
MCU = atmega1281
TARGET = LiteOS.elf

# Get OS type using uname
## Fedora core 7 : GNU/Linux 
## Cygwin: Cygwin

#OSTYPE = $(shell uname -o)

## Check if this is linux machine
#ifeq ($(OSTYPE), GNU/Linux)
	CC = avr-gcc
	AVRSIZE = avr-size
#endif

## Check if this is cygwin machine
#ifeq ($(OSTYPE), Cygwin)
	#CC = C:/Programs/WinAVR/bin/avr-gcc.exe
	#AVRSIZE = C:/Programs/WinAVR/bin/avr-size.exe
#endif

## Options common to compile, link and assembly rules
COMMON = -mmcu=$(MCU)

## Compile options common for all C compilation units.
CFLAGS = $(COMMON)
CFLAGS += -Wall -gdwarf-2 -DPLATFORM_AVR   -DPLATFORM_AVR_IRIS  -DRADIO_RF230     -DAVR_STACK_PREPARE_LENGTH=34                   -DPLATFORM_IRIS_BASE     -DF_CPU=8000000UL -Os -fsigned-char
CFLAGS += -MD -MP -MT $(*F).o -MF dep/$(@F).d 

## Assembly specific flags
ASMFLAGS = $(COMMON)
ASMFLAGS += $(CFLAGS)
ASMFLAGS += -x assembler-with-cpp -Wa,-gdwarf2

## Linker flags
LDFLAGS = $(COMMON)
LDFLAGS +=  -Wl,-Map=LiteOS.map
LDFLAGS += -Wl,-section-start=.bootloader=0x1e000
LDFLAGS += -Wl,-section-start=.systemcall=0x1d400


## Intel Hex file production flags
HEX_FLASH_FLAGS = -R .eeprom

HEX_EEPROM_FLAGS = -j .eeprom
HEX_EEPROM_FLAGS += --set-section-flags=.eeprom="alloc,load"
HEX_EEPROM_FLAGS += --change-section-lma .eeprom=0 --no-change-warnings


## Objects that must be built in order to link
OBJECTS = filesocket.o fs_structure.o fsapi.o fsconfig.o fsstring.o inode.o stdfsa.o vectorflash.o vectornode.o serialprint.o avrhardware.o bootloader.o syscall.o timerraw.o adcdriver.o adcsocket.o atmelflash.o ioeeprom.o leds.o micazhardware.o realmain.o amradio.o bytestorage.o commandhandle.o generictimer.o nodeconfig.o packethandler.o pagestorage.o scheduling.o socket.o stdserial.o stdserialhandler.o threaddata.o threads.o byteorder.o string.o types.o eventlogger.o math.o sounder.o globaltiming.o hal_avr.o rf230radiom.o tat.o clockraw_iris.o commandprocessor.o 

## Objects explicitly added by the user
LINKONLYOBJECTS = 

## Build
all: $(TARGET) LiteOS.hex LiteOS.eep LiteOS.lss size

## Compile
filesocket.o: ../filesys/filesocket.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

fs_structure.o: ../filesys/fs_structure.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

fsapi.o: ../filesys/fsapi.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

fsconfig.o: ../filesys/fsconfig.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

fsstring.o: ../filesys/fsstring.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

inode.o: ../filesys/inode.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

stdfsa.o: ../filesys/stdfsa.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

vectorflash.o: ../filesys/vectorflash.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

vectornode.o: ../filesys/vectornode.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

serialprint.o: ../io/avr_serial/serialprint.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

avrhardware.o: ../platform/avr/avrhardware.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

bootloader.o: ../platform/avr/bootloader.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

syscall.o: ../platform/avr/syscall.c
	$(CC) $(INCLUDES) $(CFLAGS) -c -O0 $<

timerraw.o: ../platform/avr/timerraw.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

adcdriver.o: ../platform/micaz/adcdriver.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

adcsocket.o: ../platform/micaz/adcsocket.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

atmelflash.o: ../platform/micaz/atmelflash.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

ioeeprom.o: ../platform/micaz/ioeeprom.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

leds.o: ../platform/micaz/leds.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

micazhardware.o: ../platform/micaz/micazhardware.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

realmain.o: ../platform/micaz/realmain.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

amradio.o: ../system/amradio.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

bytestorage.o: ../system/bytestorage.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

commandhandle.o: ../system/commandhandle.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

generictimer.o: ../system/generictimer.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

nodeconfig.o: ../system/nodeconfig.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

packethandler.o: ../system/packethandler.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

pagestorage.o: ../system/pagestorage.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

scheduling.o: ../system/scheduling.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

socket.o: ../system/socket.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

stdserial.o: ../system/stdserial.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

stdserialhandler.o: ../system/stdserialhandler.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

threaddata.o: ../system/threaddata.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

threads.o: ../system/threads.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

byteorder.o: ../types/byteorder.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

string.o: ../types/string.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

types.o: ../types/types.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

eventlogger.o: ../utilities/eventlogger.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

math.o: ../utilities/math.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

sounder.o: ../platform/micaz/sounder.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

globaltiming.o: ../system/globaltiming.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

hal_avr.o: ../io/rf230/hal_avr.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

rf230radiom.o: ../io/rf230/rf230radiom.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

tat.o: ../io/rf230/tat.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

clockraw_iris.o: ../platform/avr/clockraw_iris.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

commandprocessor.o: ../system/commandprocessor.c
	$(CC) $(INCLUDES) $(CFLAGS) -c  $<

##Link
$(TARGET): $(OBJECTS)
	 $(CC) $(LDFLAGS) $(OBJECTS) $(LINKONLYOBJECTS) $(LIBDIRS) $(LIBS) -o $(TARGET)

%.hex: $(TARGET)
	avr-objcopy -O ihex $(HEX_FLASH_FLAGS)  $< $@

%.eep: $(TARGET)
	-avr-objcopy $(HEX_EEPROM_FLAGS) -O ihex $< $@ || exit 0

%.lss: $(TARGET)
	avr-objdump -h -S $< > $@

size: ${TARGET}
	$(AVRSIZE) -C --mcu=${MCU} ${TARGET}

## Clean target
.PHONY: clean
clean:
	-rm -rf $(OBJECTS) LiteOS.elf dep/* LiteOS.hex LiteOS.eep LiteOS.lss LiteOS.map


## Other dependencies
-include $(shell mkdir dep 2>/dev/null) $(wildcard dep/*)

